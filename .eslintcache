[{"/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/index.js":"1","/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/App.js":"2","/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/components/Item.js":"3","/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/services/firebase.js":"4"},{"size":464,"mtime":1611893054974,"results":"5","hashOfConfig":"6"},{"size":2962,"mtime":1611205424186,"results":"7","hashOfConfig":"6"},{"size":415,"mtime":1611205459698,"results":"8","hashOfConfig":"6"},{"size":486,"mtime":1610894694043,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dkum6c",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/index.js",[],"/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/App.js",["20","21"],"import React, { useState, useRef, useEffect} from \"react\"\nimport './App.css';\nimport { Button, Form } from 'react-bootstrap';\nimport Item from './components/Item'\nimport {db} from './services/firebase'\nimport { Route, Switch} from 'react-router-dom'\n\nconst App = () => {\n  const [value, setValue] = useState(\"\")\n  const [idCurrentUpdate, setIdCurrentUpdate] = useState(0)\n  const taskRef = useRef()\n  const taskUpdateRef = useRef()\n  const [todoFromApi, setTodoFromApi] = useState([])\n\n\n  useEffect(() => {\n    db.collection(\"ToDo\").onSnapshot((snapShot) => {\n      setTodoFromApi(snapShot.docs.map((doc) => ({id: doc.id, data:doc.data()})))\n    })      \n  }, [])\n\n  const onDeleteItem = (e, id) => {\n    db.collection(\"ToDo\").doc(id).delete()\n    .then(() => console.log(\"deleted\"))\n    .catch(err => console.log(err))\n  }\n  \n  const onEditItem = (e, id) => {\n    const updatePersonIndex = todoFromApi.findIndex((item) => id == item.id)\n    setIdCurrentUpdate(todoFromApi[updatePersonIndex].id)\n  }\n\n  const handleUpdateForm = (e, id) => {\n    e.preventDefault()\n    db.collection(\"ToDo\").doc(id).update({\n      title: taskUpdateRef.current.value,\n    })\n   \n  }\n\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault()\n    db.collection(\"ToDo\").add({\n      title: taskRef.current.value,\n      completed: false,\n      id: todoFromApi.length +1\n\n    })\n  }\n\n  return (\n    <div className=\"ToDoApp\">\n\n      <h1 style={{display:'flex', flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>ToDo App</h1>\n\n      <div style={{display:'flex', flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n        \n        <input type=\"text\" placeholder=\"Search for task\" value={value} onChange={(e) => setValue(e.target.value)} />\n      </div>\n\n      <Switch>\n        <Route />\n      </Switch>\n\n\n      <Form  onSubmit={(e) => handleSubmitForm(e)}>\n          \n          <Form.Control className=\"ToDoInput\" type=\"text\" ref ={taskRef} placeholder=\"I need to...\" />\n          <Button className=\"ToDo-Add\"  type=\"submit\" > Add new task</Button>\n      </Form>\n      \n        {todoFromApi && todoFromApi\n          .filter((todo) => (todo.data.title).toLowerCase().includes(value.toLowerCase()))\n          .map((todo) => {\n          return (\n            <>\n            \n            <Item onDeleteItem={onDeleteItem} onEditItem={onEditItem} id={todo.id} task={todo.data.title} completed={todo.data.completed} />\n            {idCurrentUpdate && idCurrentUpdate == todo.id ? (\n              <Form style={{display:'flex', flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}} onSubmit={(e) => handleUpdateForm(e, todo.id)}>\n                  <Form.Control type=\"text\" ref={taskUpdateRef} placeholder={todo.data.title} />\n                <Button variant=\"primary\" type=\"submit\" > Edit </Button>\n              </Form>\n            ) : null}\n            </>\n            )\n        })}\n\n      </div>\n    \n    \n  );\n}\n\nexport default App;",["22","23"],"/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/components/Item.js",[],"/Users/ngominhanh/Desktop/CODE/ToDoApp/my-app/src/services/firebase.js",[],{"ruleId":"24","severity":1,"message":"25","line":29,"column":66,"nodeType":"26","messageId":"27","endLine":29,"endColumn":68},{"ruleId":"24","severity":1,"message":"25","line":80,"column":49,"nodeType":"26","messageId":"27","endLine":80,"endColumn":51},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-global-assign","no-unsafe-negation"]